paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      parameters:
      - name: limit
        in: query
        description: cantidad de productos a mostrar
        type: Integer
        minimum: 1
        default: 10        
      - name: page
        in: query
        description: numero de pagina de productos a mostrar
        schema:
          type: Integer     
          minimum: 1
          default: 1
      responses:
        "200":
          description: Los productos fueron obtenidos correctamente
        "500":
          description: Error interno del servidor
    post:
      summary: Crea un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/newProductInput'
      responses:
        "200":
          description: El producto fue creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        "500":
          description: Error interno del servidor
  /api/products/{pid}:
    get:
      summary: Obtiene el producto en base al pid recibido
      tags:
        - Products
      parameters:
      - name: pid
        in: path
        required: True
        description: id de producto a buscar
        schema:
          $type: String
      responses:
        "200":
          description: El producto fue obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        "500":
          description: Error interno del servidor
    put:
      summary: Obtiene el producto en base al pid recibido y lo actualiza
      tags:
        - Products
      parameters:
      - name: pid
        in: path
        required: True
        description: id de producto a actualizar
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/newProductInput'
      responses:
        "200":
          description: El producto fue actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        "500":
          description: Error interno del servidor
    delete:
      summary: Obtiene el producto en base al pid recibido y lo elimina
      tags:
        - Products
      parameters:
      - name: pid
        in: path
        required: True
        description: id de producto a eliminar
        schema:
          $type: String
      responses:
        "200":
          description: El producto fue eliminado correctamente
        "500":
          description: Error interno del servidor

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por mongo
        description:
          type: String
          description: Descripcion del producto
        code:
          type: String
          description: Codigo de identificacion interno, este campo es unico
        price:
          type: Number
          description: Precio del producto
        status:
          type: Boolean
          description: Status del producto
        stock:
          type: Number
          description: Cantidad de productos en stock
        category:
          type: String
          description: Categoria del producto
        owner:
          type: String
          description: Propietario del producto
      example:
        _id: ObjectId('34j3k5hng83n234r3g')
        title: Producto prueba
        description: Esta es la descripcion del producto
        code: AEF093
        price: 1000.50
        status: True
        stock: 1000
        category: Test
        owner: admin
  
  requestBodies:
    newProductInput:
      type: object
      properties:
        description:
          type: String
        code:
          type: String
        price:
          type: Number
        status:
          type: Boolean
        stock:
          type: Number
        category:
          type: String
        owner:
          type: String
      example:
        title: Producto prueba
        description: Esta es la descripcion del producto
        code: AEF093
        price: 1000.50
        status: True
        stock: 1000
        category: Test
        owner: admin